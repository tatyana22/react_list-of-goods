{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPABET","sortByLength","LENGTH","reset","reverse","this","sortedGoods","goods","visibleGoods","sort","good1","good2","localeCompare","length","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAiDE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CACZH,SAAUL,EAASS,WARzB,EAYEC,aAAe,WACb,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,MAAQ,WACN,EAAKJ,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KArBlB,EAyBES,QAAU,WACR,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBA3BzB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EAtEH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNa,EAAY,YAAOD,GAuBzB,OApBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQf,GACN,KAAKL,EAASS,QACZ,OAAOU,EAAME,cAAcD,GAE7B,KAAKpB,EAASW,OACZ,OAAOQ,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITlB,GACFa,EAAaJ,UAIfU,QAAQC,IAAInB,EAAUD,GAEfa,EA0CeQ,CAClBxB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYvB,IAAaL,EAASS,UACtCoB,QAASf,KAAKP,eAJhB,iCASA,wBACEoB,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYvB,IAAaL,EAASW,SACtCkB,QAASf,KAAKJ,aAJhB,4BASA,wBACEiB,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAaxB,IACjByB,QAASf,KAAKD,QAJhB,sBAQEC,KAAKX,MAAMC,YAAcU,KAAKX,MAAME,WAAaL,EAASM,OAC1D,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKF,MAHhB,sBAUJ,6BACGG,EAAYe,KAAI,SAAAC,GAAI,OACnB,6BACGA,GADMA,eAhFrB,GAAyBC,IAAMC,WChE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.54e3c287.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return good1.localeCompare(good2);\n\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component <{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const sortedGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info',\n              { 'is-light': sortType !== SortType.ALPABET })}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning',\n              { 'is-light': !isReversed })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n          {(this.state.isReversed || this.state.sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {sortedGoods.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}